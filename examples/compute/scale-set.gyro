azure::resource-group scale-set-resource-group-example
    name: "scale-set-resource-group-example"

    tags: {
        Name: "scale-set-resource-group-example"
    }
end

azure::network scale-set-network-example
    name: "scale-set-network-example"
    resource-group: $(azure::resource-group scale-set-resource-group-example)
    address-spaces:  [
         "10.0.0.0/27",
         "10.1.0.0/27"
    ]

    subnet
        address-prefix: "10.0.0.0/28"
        name: "subnet1"
    end

    subnet
        address-prefix: "10.0.0.16/28"
        name: "subnet2"
    end

    tags: {
        Name: "scale-set-network-example"
    }
end

azure::public-ip-address scale-set-public-ip-address-example
    name: "scale-set-public-ip-address-example"
    resource-group: $(azure::resource-group scale-set-resource-group-example)
    idle-timeout-in-minute: 4

    tags: {
        Name: "scale-set-public-ip-address-example"
    }
end

azure::load-balancer scale-set-load-balancer-example-internal
    name: "scale-set-load-balancer-example-internal"
    resource-group: $(azure::resource-group scale-set-resource-group-example)
    private-frontend
        name: "private-frontend"
        network: $(azure::network scale-set-network-example)
        subnet-name: "subnet2"

        inbound-nat-pool
            name: "test-nat-pool"
            frontend-name: "private-frontend"
            backend-port: 81
            protocol: "TCP"
            frontend-port-start: 81
            frontend-port-end: 90
        end
    end

    load-balancer-rule
        name: "test-rule-1"
        backend-port: 443
        floating-ip: false
        frontend-name: "private-frontend"
        frontend-port: 443
        idle-timeout-in-minutes: 9
        protocol: "TCP"
        backend-name: "backend-one"
        health-check-probe-name: "health-check-http"
    end

    load-balancer-rule
        name: "test-rule-2"
        backend-port: 445
        floating-ip: false
        frontend-name: "private-frontend"
        frontend-port: 445
        idle-timeout-in-minutes: 9
        protocol: "UDP"
        backend-name: "backend-two"
        health-check-probe-name: "health-check-tcp"
    end

    health-check-probe-http
        name: "health-check-http"
        interval: 13
        request-path: "/"
        port: 81
        probes: 3
    end

    health-check-probe-tcp
        name: "health-check-tcp"
        interval: 7
        port: 80
        probes: 2
    end

    tags: {
        Name: "load-balancer-example-internal"
    }
end

azure::load-balancer scale-set-load-balancer-example-internet-facing
    name: "scale-set-load-balancer-example-internet-facing"
    resource-group: $(azure::resource-group scale-set-resource-group-example)

    public-frontend
        name: "public-frontend"
        public-ip-address: $(azure::public-ip-address scale-set-public-ip-address-example)

        inbound-nat-pool
            name: "test-nat-pool-public"
            frontend-name: "public-frontend"
            backend-port: 81
            protocol: "TCP"
            frontend-port-start: 81
            frontend-port-end: 90
        end

        inbound-nat-pool
            name: "test-nat-pool-public-2"
            frontend-name: "public-frontend"
            backend-port: 82
            protocol: "TCP"
            frontend-port-start: 92
            frontend-port-end: 98
        end
    end

    load-balancer-rule
        name: "test-rule-1"
        backend-port: 443
        floating-ip: false
        frontend-name: "public-frontend"
        frontend-port: 443
        idle-timeout-in-minutes: 9
        protocol: "TCP"
        backend-name: "backend-one"
        health-check-probe-name: "health-check-http"
    end

    load-balancer-rule
        name: "test-rule-2"
        backend-port: 445
        floating-ip: false
        frontend-name: "public-frontend"
        frontend-port: 445
        idle-timeout-in-minutes: 9
        protocol: "UDP"
        backend-name: "backend-two"
        health-check-probe-name: "health-check-tcp"
    end

    health-check-probe-http
        name: "health-check-http"
        interval: 13
        request-path: "/"
        port: 81
        probes: 3
    end

    health-check-probe-tcp
        name: "health-check-tcp"
        interval: 7
        port: 80
        probes: 2
    end

    tags: {
        Name: "load-balancer-example-internet-facing"
    }
end

azure::scale-set scale-set-example
    name: "scale-set-example"
    resource-group: $(azure::resource-group scale-set-resource-group-example)
    sku-name: "Standard_A0"
    sku-tier: "Standard"

    os-type: "linux"
    image-type: "popular"
    known-virtual-image: "UBUNTU_SERVER_14_04_LTS"
    admin-user-name: "qwerty@123"
    admin-password: "qwerty@123"
    capacity: 2

    network: $(azure::network scale-set-network-example)
    subnet-name: "subnet2"

    primary-internet-facing-load-balancer
        load-balancer: $(azure::load-balancer scale-set-load-balancer-example-internet-facing)
        backends: [
            "backend-one"
        ]
    end

    primary-internal-load-balancer
        load-balancer: $(azure::load-balancer scale-set-load-balancer-example-internal)
        backends: [
            "backend-one",
            "backend-two"
        ]
    end

    tags: {
        Name: "scale-set-example"
    }
end

azure::scale-set-scaling scale-set-scaling-example
    name: "scale-set-scaling-example"
    resource-group: $(azure::resource-group scale-set-resource-group-example)
    enabled: "false"
    scale-set: $(azure::scale-set scale-set-example)

    profile
        name: "profile-example-fixed-schedule"
        type: "FIXED_SCHEDULE"
        default-instance-count: 2
        fixed-schedule
            start-time: "2019-08-23T00:00:00.000Z"
            end-time: "2019-08-23T23:59:00.000Z"
            time-zone: "Eastern Standard Time"
        end
    end

    profile
        name: "profile-example-recurrent-schedule"
        type: "RECURRENT_SCHEDULE"
        default-instance-count: 1
        recurrent-schedule
            time-zone: "Eastern Standard Time"
            start-time: "12:23"
            day-of-weeks: [
                "MONDAY", "TUESDAY", "WEDNESDAY"
            ]
        end
    end

    profile
        name: "profile-example-recurrent-schedule-2"
        type: "RECURRENT_SCHEDULE"
        default-instance-count: 1
        recurrent-schedule
            time-zone: "Eastern Standard Time"
            start-time: "12:23"
            day-of-weeks: [
                "MONDAY", "TUESDAY", "WEDNESDAY"
            ]
        end
    end

    profile
        name: "profile-example-metric"
        type: "METRIC"
        default-instance-count: 1
        max-instance-count: 1
        min-instance-count: 1
        rule
            metric-name: "Percentage CPU"
            metric-source-id: $(azure::scale-set scale-set-example).id
            statistic-duration: 1200
            statistic-frequency: 60
            statistic-type: "AVERAGE"
            time-aggregation: "AVERAGE"
            comparison-operation: "GREATER_THAN"
            threshold: 70
            scale-direction: "INCREASE"
            scale-type: "CHANGE_COUNT"
            instance-count-change: 1
            cooldown: 5
        end

        rule
            metric-name: "Outbound Flows"
            metric-source-id: $(azure::scale-set scale-set-example).id
            statistic-duration: 1200
            statistic-frequency: 60
            statistic-type: "AVERAGE"
            time-aggregation: "AVERAGE"
            comparison-operation: "GREATER_THAN"
            threshold: 70
            scale-direction: "INCREASE"
            scale-type: "CHANGE_COUNT"
            instance-count-change: 1
            cooldown: 5
        end
    end
end